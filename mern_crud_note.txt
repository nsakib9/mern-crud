1-Setup create-react-app client
2**Add 4 files, Update PostList, PostItem
3-Import: PostList>App, PostItem>PostList
4-Update Addpost, Editpost
5-Import: AddPost,EditPost>App,
Read the project structure again.
Will use react router
npm install react-router-dom
Now import from react router.
6-import { BrowserRouter, Route } from 'react-router-dom'
Define how we will use router.
** Router work after follow this format:
import { BrowserRouter, Routes, Route } from 'react-router-dom';
<BrowserRouter>
<Routes>
    <Route path="add" element={<AddPost />} exact/>
    <Route path="edit" element={<EditPost />} exact/>
    <Route path="/" element={<PostList />} exact/>
</Routes>
</BrowserRouter>
7-Set routes in App, correct format

Task:Now setup server, make nodejs server and install express
-npm init
-npm install express
Here client folder is frontend other are backend.
To save and load server automatically:
-npm install nodemon
if error: npm cache clear --force
8-Write server.js server
Write "node server.js" it need to restart each time for any change
Write "nodemon server.js" it need to restart each time for any change
9-set / route with message check nodemon server
Make connection with mongodb
10-npm install mongoose and create conn.js file
Visit https://www.mongoosejs.com/ 
copy connection 2 line to conn.js
11-from mongoosejs.com copy 2 line and write dbobject
import conn.js to server.js
copy connection code from compass to conn.js will connection
12-import and conn.js connect url update

Update Add post page: Update style on app.js
copy background color from: https://cssgradient.io
13-Update some style on app.js
install bootstrapm import on App.js and check addpost.js
Add postadding form to addpost page.
Add css on app.css
14-BS import on App, form on AddPost, some css
Import React Hook, for 3 field 3 Hook
useState define for 3 form fields.
Set attribute on forms to set hooks
Check data with onclick function
Set value with function and check with console.
15-import hooks for form field and check with console
Set unique id for every post 
set with a package
npm i uniqid
import uniqid in addpost 
And uniqid to addpost() function.
in console it will give different postid everytime.
16-install and use uniqid, check with console (Add post backend complete)
can't send data directly with form , Need to create mogodb model for every collection.
Create model for mongodb.
Use seperate file beside server.js for all operations of nodejs
Create folder routes.
install required packages in backend side
To perform mern stack application in backend need 2 package: router & body-paser
npm i router body-parser
nodemon server.js (for restart)
Perform experss object, update post.js
17-i packages, create router, schema and export
Now need to import router on server.js
18-Route in post and define in server